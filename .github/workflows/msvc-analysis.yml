# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Find more information at:
# https://github.com/microsoft/msvc-code-analysis-action

name: Microsoft C++ Code Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '28 3 * * 6'

env:
  # Path to the CMake build directory.
  build: '${{ github.workspace }}/build'
  compiler: 'vs2019'
  arch: '64'

jobs:
  analyze:
    name: Analyze
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Get Windows dependencies
        shell: bash
        working-directory: ${{github.workspace}}/dependencies
        run: unzip windows-dependencies-${{env.compiler}}-${{env.arch}}.zip
      
      - name: Configure CMake
        run: cmake -B ${{ env.build }} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/dependencies -DCMAKE_PREFIX_PATH=${{github.workspace}}/dependencies -A x64

      # Build is required as generated source files are used
      #- name: Build CMake
      #  run: cmake --build ${{ env.build }}

      - name: Initialize MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@502db28262ba134c9a621d5a509b9f7e696c99b6
        # Provide a unique ID to access the sarif output path
        id: run-analysis
        with:
          cmakeBuildDirectory: ${{ env.build }}
          # Ruleset file that will determine what checks will be run
          ruleset: NativeRecommendRules.ruleset

      # Upload SARIF file to GitHub Code Scanning Alerts
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.run-analysis.outputs.sarif }}
