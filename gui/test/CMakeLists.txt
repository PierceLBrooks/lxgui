set(SRCROOT ${PROJECT_SOURCE_DIR}/gui/test)
include_directories(${PROJECT_SOURCE_DIR}/include)
include_directories(${PROJECT_SOURCE_DIR}/sol2/include)
include_directories(${LUA_INCLUDE_DIR})
if (NOT EMSCRIPTEN)
    if(LXGUI_TEST_IMPLEMENTATION STREQUAL "OPENGL_SFML")
        include_directories(${FREETYPE_INCLUDE_DIRS})
        include_directories(${PNG_INCLUDE_DIR})
        include_directories(${ZLIB_INCLUDE_DIR})
        include_directories(${OPENGL_INCLUDE_DIR})
        include_directories(${SFML_INCLUDE_DIR})
    elseif(LXGUI_TEST_IMPLEMENTATION STREQUAL "OPENGL_SDL")
        include_directories(${FREETYPE_INCLUDE_DIRS})
        include_directories(${PNG_INCLUDE_DIR})
        include_directories(${ZLIB_INCLUDE_DIR})
        include_directories(${OPENGL_INCLUDE_DIR})
        include_directories(${SDL2_INCLUDE_DIRS})
    elseif(LXGUI_TEST_IMPLEMENTATION STREQUAL "SDL")
        include_directories(${SDL2_INCLUDE_DIRS})
        include_directories(${SDL2_TTF_INCLUDE_DIRS})
        include_directories(${SDL2_IMAGE_INCLUDE_DIRS})
    elseif(LXGUI_TEST_IMPLEMENTATION STREQUAL "SFML")
        include_directories(${SFML_INCLUDE_DIR})
    endif()
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/gui/test/bin)

add_executable(lxgui-test
    ${SRCROOT}/main.cpp
)

if(LXGUI_TEST_IMPLEMENTATION STREQUAL "OPENGL_SFML")
    target_compile_definitions(lxgui-test PRIVATE GLSFML_GUI)
elseif(LXGUI_TEST_IMPLEMENTATION STREQUAL "OPENGL_SDL")
    target_compile_definitions(lxgui-test PRIVATE GLSDL_GUI)
elseif(LXGUI_TEST_IMPLEMENTATION STREQUAL "SDL")
    target_compile_definitions(lxgui-test PRIVATE SDL_GUI)
elseif(LXGUI_TEST_IMPLEMENTATION STREQUAL "SFML")
    target_compile_definitions(lxgui-test PRIVATE SFML_GUI)
endif()

if (EMSCRIPTEN)
    set(TEST_EMSCRIPTEN_USE_FLAGS "--preload-file ${PROJECT_SOURCE_DIR}/gui/test/bin/interface@interface")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${TEST_EMSCRIPTEN_USE_FLAGS}")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${TEST_EMSCRIPTEN_USE_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${TEST_EMSCRIPTEN_USE_FLAGS}")
endif()

if(LXGUI_TEST_IMPLEMENTATION STREQUAL "OPENGL_SFML")
    target_link_libraries(lxgui-test lxgui-gl)
    target_link_libraries(lxgui-test lxgui-input-sfml)
    target_link_libraries(lxgui-test ${FREETYPE_LIBRARY})
    target_link_libraries(lxgui-test ${PNG_LIBRARY})
    target_link_libraries(lxgui-test ${ZLIB_LIBRARY})
    target_link_libraries(lxgui-test ${OPENGL_LIBRARY})
    target_link_libraries(lxgui-test ${GLEW_LIBRARY})
    target_link_libraries(lxgui-test ${SFML_WINDOW_LIBRARY})
    target_link_libraries(lxgui-test ${SFML_SYSTEM_LIBRARY})
elseif(LXGUI_TEST_IMPLEMENTATION STREQUAL "OPENGL_SDL")
    target_link_libraries(lxgui-test lxgui-gl)
    target_link_libraries(lxgui-test lxgui-input-sdl)
    target_link_libraries(lxgui-test ${FREETYPE_LIBRARY})
    target_link_libraries(lxgui-test ${PNG_LIBRARY})
    target_link_libraries(lxgui-test ${ZLIB_LIBRARY})
    target_link_libraries(lxgui-test ${OPENGL_LIBRARY})
    target_link_libraries(lxgui-test ${GLEW_LIBRARY})
    target_link_libraries(lxgui-test ${SDL2_LIBRARIES})
elseif(LXGUI_TEST_IMPLEMENTATION STREQUAL "SDL")
    target_link_libraries(lxgui-test lxgui-sdl)
    target_link_libraries(lxgui-test lxgui-input-sdl)
    if (NOT EMSCRIPTEN)
        target_link_libraries(lxgui-test ${SDL2_LIBRARIES})
        target_link_libraries(lxgui-test ${SDL2_TTF_LIBRARIES})
        target_link_libraries(lxgui-test ${SDL2_IMAGE_LIBRARIES})
    endif()
elseif(LXGUI_TEST_IMPLEMENTATION STREQUAL "SFML")
    target_link_libraries(lxgui-test lxgui-sfml)
    target_link_libraries(lxgui-test lxgui-input-sfml)
    target_link_libraries(lxgui-test ${SFML_GRAPHICS_LIBRARY})
    target_link_libraries(lxgui-test ${SFML_WINDOW_LIBRARY})
    target_link_libraries(lxgui-test ${SFML_SYSTEM_LIBRARY})
endif()

target_link_libraries(lxgui-test lxgui)
target_link_libraries(lxgui-test lxgui-luapp)
target_link_libraries(lxgui-test lxgui-xml)
target_link_libraries(lxgui-test lxgui-utils)
target_link_libraries(lxgui-test ${LUA_LIBRARIES})

if(WINDOWS AND MSVC)
    target_link_libraries(lxgui-test user32)
endif()
if(UNIX AND NOT (APPLE OR EMSCRIPTEN))
    target_link_libraries(lxgui-test X11 m stdc++ stdc++fs)
endif()
